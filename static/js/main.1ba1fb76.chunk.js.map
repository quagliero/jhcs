{"version":3,"sources":["lewis-chess.jpg","lewis-chess.webp","Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","title","subtitle","className","srcSet","lewisChessWebp","type","lewisChessJpg","src","alt","App","games","useEffect","forEach","g","i","window","pgnView","pgn","width","layout","theme","pieceStyle","map","key","id","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,yC,kBCA3CD,EAAOC,QAAU,IAA0B,0C,2MCwB5BC,G,MAnBA,SAAC,GAGT,IAFLC,EAEI,EAFJA,MACAC,EACI,EADJA,SAGA,OACE,4BAAQC,UAAU,UAChB,6BAASA,UAAU,YACjB,4BAAQC,OAAQC,IAAgBC,KAAK,eACrC,4BAAQF,OAAQG,IAAeD,KAAK,eACpC,yBAAKE,IAAKD,IAAeE,IAAI,oBAE/B,4BAAKR,GAAS,+DACd,4BAAKC,GAAY,oDACjB,4BAAK,Y,MC+DIQ,MA9Ef,WACE,IAAMC,EAAQ,CAAC,idAAD,wiHA0Dd,OANAC,qBAAU,WACRD,EAAME,SAAQ,SAACC,EAAGC,GAChBC,OAAOC,QAAP,eAAuBF,GAAK,CAAEG,IAAKJ,EAAGK,MAAO,KAAMC,OAAQ,OAAQC,MAAO,OAAQC,WAAY,iBAKhG,yBAAKnB,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,SACZQ,EAAMY,KAAI,SAACT,EAAGC,GAAJ,OACT,yBACEZ,UAAU,OACVqB,IAAKT,GAEL,yBAAKU,GAAE,eAAUV,aC7DXW,QACW,cAA7BV,OAAOW,SAASC,UAEe,UAA7BZ,OAAOW,SAASC,UAEhBZ,OAAOW,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1ba1fb76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lewis-chess.7d9b6c5f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lewis-chess.3e656ecb.webp\";","import React from 'react';\nimport lewisChessWebp from './lewis-chess.webp';\nimport lewisChessJpg from './lewis-chess.jpg';\nimport './Header.css';\n\nconst Header = ({\n  title,\n  subtitle,\n}) => {\n\n  return (\n    <header className=\"header\">\n      <picture className=\"headerBg\">\n        <source srcSet={lewisChessWebp} type=\"image/webp\"/>\n        <source srcSet={lewisChessJpg} type=\"image/jpeg\"/>\n        <img src={lewisChessJpg} alt=\"Lewis Chessmen\"/>\n      </picture>\n      <h1>{title || \"♟️ John Harrison Championship Series ♟️\"}</h1>\n      <h2>{subtitle || \"Harison-Denby vs. Harrison, Correspondence 2020.\"}</h2>\n      <h3>{'5 - 3'}</h3>\n    </header>\n  );\n};\n\nexport default Header;","import React, { useEffect } from 'react';\nimport Header from './Header';\nimport './App.css';\n\nfunction App() {\n  const games = [\n    `[Date \"2020-04-07\"]\n    [Result \"1-0\"]\n    [White \"Titan\"]\n    [Black \"Iceman\"]\n    [Event \"The Cagey Opener\"]\n    1.d4 Nc6 2.d5 Nb4 3.a3 Na6 4.e4 e5 5.dxe6 fxe6 6.Qh5+ g6 7.Qe5 Qf6 8.Qa5 b6 9.Qc3 Bb7 10.Nh3 O-O-O 11.Bg5 Qg7 12.Nd2 Kb8 13.Bxd8 c5 14.Nf3 h6 15.Ne5 Bc8 16.Rd1 d6 17.Nc4 Bb7 18.Nxd6 Bxd6 19.Rxd6 Qxc3+ 20.bxc3 Bxe4 21.Bxa6 Nf6 22.Bxf6 Kc7 23.Rxe6 Rf8 24.f3 Bxc2 25.Be5+ Kd7 26.Rd6+ Ke7 27.O-O Ba4 28.Rxg6 Kf7 29.Rxh6 Bb3 30.Ng5+ Ke8 31.Bc8 1-0`,\n    `[Date \"2020-04-26\"]\n    [White \"Iceman\"]\n    [Black \"Titan\"]\n    [Event \"Lord of the Rings\"]\n    [Result \"2-0\"]\n    1.e4 d5 2.Nc3 Nf6 3.Bb5+ Nc6 4.Qe2 a6 5.Ba4 b5 6.Bb3 Nd4 7.Qd3 e5 8.Nf3 dxe4 9.Qe3 exf3 10.Qxe5+ Be7 11.O-O Bf5 12.d3 O-O 13.Qe1 Qd6 14.g3 Bh3 15.Bf4 Qc6 16.Qxe7 Ne6 17.Rfe1 Rfe8 18.Qa3 Bg2 19.Qb4 Rad8 20.h4 Rd4 21.Qa5 Ng4 22.Bxe6 Ra4 23.Qxc7 Qxc7 24.Bxc7 fxe6 25.b3 Rc8 26.Bb8 g5 27.bxa4 Rxb8 28.Re4 h5 29.hxg5 Rc8 30.Nb1 Rf8 31.Rxe6 Kg7 32.Rxa6 Re8 33.Na3 Re2 34.Nxb5 h4 35.gxh4 Rxf2 36.h5 Bh3 37.Ra7+ Kf8 38.h6 Rg2+ 39.Kh1 Nf2# 0-1`,\n    `[Date \"2020-05-07\"]\n    [White \"Titan\"]\n    [Black \"Iceman\"]\n    [Event \"Game of Thrones\"]\n    [Result \"2-1\"]\n    1.d4 d5 2.c4 e6 3.Nc3 Nc6 4.Nf3 Bb4 5.Bg5 Qd7 6.e4 h6 7.Bd2 Nf6 8.Bd3 O-O 9.a3 Ba5 10.Be3 dxe4 11.Ne5 Nxe5 12.Be2 Nc6 13.O-O b6 14.f3 exf3 15.Bxf3 Bb7 16.Nb5 a6 17.Nc3 b5 18.cxb5 Bxc3 19.bxc6 Bxc6 20.bxc3 Nd5 21.Qd2 f5 22.c4 Nb6 23.Rac1 g5 24.Bh5 f4 25.Bf2 e5 26.c5 Na4 27.Qa2+ Qd5 28.Qc4 Kh8 29.Bd1 Qxg2# 1-0`,\n    `[Date \"2020-05-16\"]\n    [White \"Iceman\"]\n    [Black \"Titan\"]\n    [Result \"3-1\"]\n    [Event \"The Empire Strikes Back\"]\n    1.e4 e5 2.Nc3 d6 3.Qe2 Nc6 4.b3 Nf6 5.Ba3 Nd4 6.Qd3 c5 7.O-O-O d5 8.exd5 c4 9.Qxc4 Bxa3+ 10.Kb1 O-O 11.Qa4 Qd6 12.Nf3 Ng4 13.Re1 Qb4 14.Qxb4 Bxb4 15.Nxe5 Nxf2 16.Rg1 f6 17.Nd3 Bxc3 18.Nxf2 Bxd2 19.Rd1 Be3 20.Nh3 Nf5 21.Bc4 Nd6 22.Rge1 Re8 23.Rd3 Bxh3 24.Rdxe3 Rxe3 25.Rxe3 Bxg2 26.Bd3 Bxd5 27.Re2 Rc8 28.c4 Bf7 29.h4 Re8 30.Kb2 Rxe2+ 31.Bxe2 Nf5 32.a4 b6 33.b4 Be8 34.Ka3 g5 35.hxg5 fxg5 36.c5 Nd4 37.Bd3 g4 38.Be4 Bc6 39.Bxc6 Nxc6 40.Kb3 g3 41.Kc2 g2 42.Kd2 g1=Q 43.Kc3 Qxc5+ 44.Kb2 Nd4 45.Ka2 Qc2+ 46.Ka1 Nb3# 0-1`,\n    `[Date \"2020-05-24\"]\n    [Result \"4-1\"]\n    [White \"Titan\"]\n    [Black \"Iceman\"]\n    [Event \"A Misplaced Knight\"]\n    1.d4 d5 2.c4 dxc4 3.Bf4 b5 4.a4 a6 5.e3 Nf6 6.axb5 Bg4 7.Be2 h5 8.Qa4 Qd7 9.Nc3 g6 10.bxa6 Nc6 11.Nf3 Bh6 12.Bxh6 Rxh6 13.O-O h4 14.Rfd1 Nxd4 15.Rxd4 Qxa4 16.Rxa4 h3 17.Nb5 hxg2 18.Rf4 Nd7 19.Rd4 Ne5 20.Nxe5 Bxe2 21.Nxc7+ Kf8 22.Nxa8 Kg7 23.Kxg2 f6 24.Nxc4 g5 25.Nc7 g4 26.Ne6+ Kf7 27.a7 Bf3+ 28.Kg1 Kxe6 29.e4 f5 30.a8=Q Kf7 31.Ne5+ Kf6 32.Nd7+ Kg5 33.Qf8 Rh3 34.Ra3 e5 35.Qxf5+ Kh4 36.Nxe5 Rxh2 37.Ng6+ Kh3 38.Qh5# 0-1`,\n    `[Date \"2020-05-30\"]\n    [Result \"4-2\"]\n    [White \"Iceman\"]\n    [Black \"Titan\"]\n    [Event \"Titanic Footle\"]\n    1.e3 g5 2.Bc4 d5 3.Bb3 b5 4.Nc3 c6 5.e4 b4 6.Na4 e5 7.exd5 cxd5 8.c3 bxc3 9.bxc3 d4 10.Qe2 Nc6 11.Bb2 Nf6 12.O-O-O Qa5 13.h4 Bh6 14.hxg5 Bxg5 15.Nf3 Rg8 16.cxd4 Nxd4 17.Nxd4 Bg4 18.f3 O-O-O 19.Qc4+ Qc7 20.Nb5 Be6 21.Qxc7# 1-0`,\n    `[Date \"2020-06-09\"]\n    [Result \"4-3\"]\n    [White \"Titan\"]\n    [Black \"Iceman\"]\n    [Event \"Harry Potter\"]\n    1.d4 Nc6 2.Nf3 e6 3.e4 Bb4+ 4.c3 Ba5 5.Bd3 Qe7 6.b4 Bb6 7.a4 a5 8.b5 Nd8 9.Be3 d5 10.e5 Nh6 11.Bxh6 gxh6 12.c4 c5 13.bxc6 Nxc6 14.O-O dxc4 15.Bxc4 Rg8 16.Qd3 Rg7 17.Nc3 Bd7 18.Rab1 Nb4 19.Qe4 Bc6 20.d5 exd5 21.Nxd5 Bxd5 22.Bxd5 O-O-O 23.Rfc1+ Kb8 24.Rd1 h5 25.Nh4 Rdg8 26.g3 Rg4 27.Qxh7 Qxh4 28.Qxf7 Rxg3+ 29.Bg2 Rxg2+ 30.Kf1 Rxf2+ 31.Ke1 Rg1# 1-0`,\n    `[Date \"2020-06-22\"]\n    [Result \"5-3\"]\n    [White \"Iceman\"]\n    [Black \"Titan\"]\n    [Event \"Fußball\"]\n    1.e3 e5 2.d4 exd4 3.exd4 d5 4.Qe2+ Qe7 5.Nf3 Bf5 6.Bg5 Qxe2+ 7.Bxe2 Bxc2 8.Nc3 Be4 9.Nxe4 dxe4 10.Ne5 Nf6 11.O-O-O Nbd7 12.Bc4 Nxe5 13.dxe5 Ng4 14.e6 f6 15.Be3 Nxe3 16.fxe3 Rd8 17.Rd7 Rxd7 18.exd7+ Kxd7 19.Rd1+ Bd6 20.h4 f5 21.Be2 Ke7 22.g4 g6 23.Rd4 Bc5 24.Ra4 Bxe3+ 25.Kb1 Kd6 26.Rb4 b6 27.Ra4 a5 28.b4 Re8 29.bxa5 f4 30.a6 f3 31.Bd1 Ke5 32.a7 Ra8 33.h5 b5 34.Ra5 Bxa7 35.Rxb5+ Kf4 36.Rb7 Bb6 37.hxg6 hxg6 38.Kb2 e3 39.Kc2 Rxa2+ 40.Kb1 Rd2 41.Kc1 f2 42.Rb8 Bc5 43.Rf8+ Bxf8 44.Be2 Rxe2 45.g5 Ba3+ 46.Kd1 f1=Q# 0-1`,\n  ];\n\n\n  useEffect(() => {\n    games.forEach((g, i) => {\n      window.pgnView(`board${i}`, { pgn: g, width: null, layout: 'left', theme: 'zeit', pieceStyle: 'merida' });\n    });\n  });\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className=\"container\">\n        <div className=\"games\">\n          {games.map((g, i) => (\n            <div\n              className=\"game\"\n              key={i}\n            >\n              <div id={`board${i}`}/>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}